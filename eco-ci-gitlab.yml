cache:
    paths:
        - /tmp/eco-ci/venv/

.initialize_energy_estimator:
    script:
        - |
            apt-get update
            apt-get install git python3.10 python3.10-venv gcc bc jq curl golang-go psmisc -y
            if [[ -d /tmp/eco-ci ]]; then
                rm -rf /tmp/eco-ci
            fi
            git clone --depth 1 --single-branch --branch main https://github.com/green-coding-berlin/eco-ci-energy-estimation /tmp/eco-ci/main
            /tmp/eco-ci/main/scripts/setup.sh initialize -r false -g false
            /tmp/eco-ci/main/scripts/setup.sh setup_python
      
.start_measurement:
    script:
        - |
            echo 'running eco-ci start script'
            /tmp/eco-ci/main/scripts/vars.sh add_var "WORKFLOW_ID" $CI_PROJECT_ID
            /tmp/eco-ci/main/scripts/setup.sh start_measurement
    
.get_measurement:
    script:
        - echo 'running eco-ci measure script'
        - |
            /tmp/eco-ci/main/scripts/make_measurement.sh -l "$ECO_CI_LABEL" -r $CI_PIPELINE_ID -b $CI_COMMIT_REF_NAME -R $CI_PROJECT_URL -c $CI_COMMIT_SHA -sd $ECO_CI_SEND_DATA

.display_results:
    script:
        - echo 'running eco-ci display script'
        - |
            TXT_GREEN="\e[32m" && TXT_CLEAR="\e[0m"
            display_badge=true
            display_table=true
            display_graph=false
            /tmp/eco-ci/main/scripts/display_results.sh -b $CI_COMMIT_REF_NAME -db $display_badge -r $CI_PIPELINE_ID -R $CI_PROJECT_URL -dt $display_table -dg $display_graph -sd $ECO_CI_SEND_DATA
        - echo -e "$TXT_GREEN$(cat /tmp/eco-ci/output.txt)$TXT_CLEAR"
        - cp /tmp/eco-ci/output.txt ./eco-ci-output.txt
        - cp /tmp/eco-ci/total-data.json ./eco-ci-total-data.json

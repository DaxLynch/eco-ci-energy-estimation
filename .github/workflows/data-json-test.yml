name: Test data output as json

on:
  push:
    branches:
      - introduce-measurement-output # for testing purposes only on this branch

jobs:
  test-data-output-action:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Initialize Energy Estimation
        uses: ./
        with:
          task: start-measurement

      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Node Setup Energy Measurment
        id: data-node-setup
        uses: ./
        with:
          task: get-measurement
          label: 'node setup'
          send-data: false

      - name: Print node setup data
        run: |
          echo "total json: ${{ steps.data-node-setup.outputs.data-lap-json }}"

      - name: Assert node setup output is appropriate
        shell: bash
        run: |
          if [ '${{ steps.data-node-setup.outputs.data-lap-json }}' == '' ]; then
            echo "Output must not be empty"; exit 1;
          fi
          output='${{ steps.data-node-setup.outputs.data-lap-json }}'
          required_fields=("repository" "branch" "workflow" "run_id" "label" "cpu_avg_percent" "energy_joules" "power_avg_watts")
          for field in "${required_fields[@]}"; do
            if ! echo "$output" | jq -e --arg field "$field" 'has($field)' >/dev/null; then
              echo "output is missing the field: $field"
              exit 1
            fi
          done
          if [ $(echo '${{ steps.data-node-setup.outputs.data-lap-json }}' | jq -e '.label == "node setup" | if . then 1 else 0 end') -eq 1 ]; then
            echo "value of 'label' is 'node setup'"
          else
            echo "value of 'label' must be 'node setup'"
            exit 1
          fi

      - name: Wait before the next step
        run: sleep 10

      - name: Sleep measurement
        id: data-sleep
        uses: ./
        with:
          task: get-measurement
          label: "sleep"
          send-data: false

      - name: Print sleep data
        run: |
          echo "total json: ${{ steps.data-sleep.outputs.data-lap-json }}"

      - name: Assert sleep output is appropriate
        shell: bash
        run: |
          if [ '${{ steps.data-sleep.outputs.data-lap-json }}' == '' ]; then
            echo "Output must not be empty"; exit 1;
          fi
          if [ $(echo '${{ steps.data-sleep.outputs.data-lap-json }}' | jq -e 'has("repository", "branch", "workflow", "run_id", "label", "cpu_avg_percent", "energy_joules", "power_avg_watts") | if . then 1 else 0 end') -eq 1 ]; then
            echo "output has correct structure"
          else
            echo "output has wrong structure"
            exit 1;
          fi
          if [ $(echo '${{ steps.data-sleep.outputs.data-lap-json }}' | jq -e '.label == "sleep" | if . then 1 else 0 end') -eq 1 ]; then
            echo "value of 'label' is 'sleep'"
          else
            echo "value of 'label' must be 'sleep'"
            exit 1
          fi

      - name: Eco CI Energy Estimation
        id: data-total
        uses: ./
        with:
          task: display-results
          send-data: false

      - name: Print total data
        run: |
          echo "total json: ${{ steps.data-total.outputs.data-total-json }}"

      - name: Assert total output is appropriate
        shell: bash
        run: |
          if [ '${{ steps.data-total.outputs.data-total-json }}' == '' ]; then
            echo "Output must not be empty"; exit 1;
          fi
          if [ $(echo '${{ steps.data-total.outputs.data-total-json }}' | jq -e 'has("repository", "branch", "workflow", "run_id", "label", "cpu_avg_percent", "energy_joules", "power_avg_watts") | if . then 1 else 0 end') -eq 1 ]; then
            echo "output has correct structure"
          else
            echo "output has wrong structure"
            exit 1;
          fi
